name: "CI"
on:
  pull_request:
  push:
    branch: [master]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 2,5' # every Tuesday & Friday
permissions:
  contents: write
jobs:
  rust-cli:
    if: "${{ github.event.head_commit.message == 'chore(lockfile): update flake.lock' || github.event.head_commit.message == 'chore(deps): update flake.lock' || github.event.head_commit.message == '(lock:update) flake.lock' }}"
    runs-on: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v4
    - uses: DeterminateSystems/nix-installer-action@main
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        extra-conf: experimental-features = nix-command flakes auto-allocate-uids configurable-impure-env
    - uses: DeterminateSystems/magic-nix-cache-action@main
    - uses: cachix/cachix-action@master
      with:
        name: fmcachix
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix build .#bluetui .#lowfi
    - run: nix-collect-garbage -d
  xdman:
    if: "${{ github.event.head_commit.author.name != 'Bot' && (github.event.head_commit.message == 'chore(lockfile): update flake.lock' || github.event.head_commit.message == 'chore(deps): update flake.lock' || github.event.head_commit.message == '(lock:update) flake.lock') }}"
    runs-on: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
    - name: Setup git
      run: |
        git config --global user.name 'Bot'
        git config --global user.email 'fm18lv@gmail.com'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
    - uses: DeterminateSystems/nix-installer-action@main
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        extra-conf: experimental-features = nix-command flakes auto-allocate-uids configurable-impure-env
    - uses: DeterminateSystems/magic-nix-cache-action@main
    - uses: cachix/cachix-action@master
      with:
        name: fmcachix
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Update Nuget deps 
      run: |
        echo $PWD
        nix build .#xdman.passthru.fetch-deps --verbose # update nuget deps
    - run: |
        ./result /home/runner/work/fmpkgs/fmpkgs/xdman/xdm-gtk/deps.nix
        unlink result
    - name: Commit
      run: |
        git add -A && git commit -m "chore(xdman): update deps xdman" && git push || echo "Nothing..."
    - run: nix build .#xdman --verbose
    - run: nix-collect-garbage -d
  lockfile:
    runs-on: [ubuntu-latest]
    if: ${{ github.event_name != 'pull_request' && (github.event.head_commit.author.name == 'fmway' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') }}
    steps:
    - uses: actions/checkout@v4
    - uses: DeterminateSystems/nix-installer-action@main
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        extra-conf: experimental-features = nix-command flakes auto-allocate-uids configurable-impure-env
    - uses: DeterminateSystems/update-flake-lock@v24
      name: Update flake.lock
      with:
        branch: nightly-update
        token: ${{ secrets.GITHUB_TOKEN }}
        git-author-name: 'little fmway'
        git-author-email: 'fm18lv@gmail.com'
        git-committer-name: 'little fmway'
        git-committer-email: 'fm18lv@gmail.com'
        commit-msg: 'chore(lockfile): update flake.lock'
        pr-title: 'chore(lockfile): update flake.lock'
        pr-labels: |
          dependencies
          automated
