name: "CI"
on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 2,5' # every Tuesday & Friday
    - cron: '0 12 * * *' # every day at 12.00
permissions: write-all
jobs:
  rust-cli:
    if: "${{ github.event_name == 'pull_request' }}"
    runs-on: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v4
    - uses: DeterminateSystems/nix-installer-action@main
      with:
        github-token: ${{ secrets.GH_TOKEN }}
        extra-conf: experimental-features = nix-command flakes auto-allocate-uids configurable-impure-env
    - uses: DeterminateSystems/magic-nix-cache-action@main
      with:
        use-flakehub: false
    - uses: cachix/cachix-action@master
      with:
        name: fmcachix
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix build .#bluetui .#lowfi
    - run: nix-collect-garbage -d
  xdman:
    if: "${{ github.event_name == 'pull_request' && github.event.head_commit.author.name != 'xdman_bot' }}"
    # if: "${{ github.event.head_commit.author.name != 'Bot' && (github.event.head_commit.message == 'chore(lockfile): update flake.lock' || github.event.head_commit.message == 'chore(deps): update flake.lock' || github.event.head_commit.message == '(lock:update) flake.lock') }}"
    runs-on: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Setup git
      run: |
        git config --global user.name 'xdman_bot'
        git config --global user.email 'fm18lv@gmail.com'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
    - uses: DeterminateSystems/nix-installer-action@main
      with:
        github-token: ${{ secrets.GH_TOKEN }}
        extra-conf: experimental-features = nix-command flakes auto-allocate-uids configurable-impure-env
    - uses: DeterminateSystems/magic-nix-cache-action@main
      with:
        use-flakehub: false
    - uses: cachix/cachix-action@master
      with:
        name: fmcachix
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Update Nuget deps 
      env:
        NIXPKGS_ALLOW_INSECURE: 1
      run: |
        echo $PWD
        nix build --impure .#xdman.passthru.fetch-deps --verbose # update nuget deps
    - env:
        NIXPKGS_ALLOW_INSECURE: 1
      run: |
        ./result /home/runner/work/fmpkgs/fmpkgs/xdman/xdm-gtk/deps.nix
        unlink result
    - name: Commit
      run: |
        git add -A && git commit -m "chore(xdman): update deps xdman" && git push || echo "Nothing..."
    - env:
        NIXPKGS_ALLOW_INSECURE: 1
      run: nix build --impure .#xdman --verbose
    - run: nix-collect-garbage -d
  firefox-addons:
    runs-on: [ubuntu-latest]
    if: ${{ github.event_name != 'pull_request' && github.ref_name != 'nightly-update' && (github.event.head_commit.author.name == 'fmway' || (github.event_name == 'schedule' && github.event.schedule == '0 12 * * *') || github.event_name == 'workflow_dispatch') }}
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
    - name: Setup git
      run: |
        git config --global user.name 'little fmway'
        git config --global user.email 'fm18lv@gmail.com'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
    - uses: DeterminateSystems/nix-installer-action@main
      with:
        github-token: ${{ secrets.GH_TOKEN }}
        extra-conf: experimental-features = nix-command flakes auto-allocate-uids configurable-impure-env
    - uses: DeterminateSystems/magic-nix-cache-action@main
      with:
        use-flakehub: false
    - name: update addons
      run: nix run .#firefoxAddonsUpdater
    - name: Check Updates
      id: check
      env:
        GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
      run: |
        if [ -n "$(git status --short)" ]; then
          git add -A
          git commit -m "chore(firefox-addons): update some addons"
          git checkout -B firefox-addons
          git push origin firefox-addons
          if [ -z "$(git diff origin/firefox-addons origin/master)" ]; then
            echo "skip=true" >> "$GITHUB_OUTPUT"
          fi
        else
          echo "skip=true" >> "$GITHUB_OUTPUT"
        fi
    - name: Pull Request
      if: '!steps.check.outputs.skip'
      env:
        GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
      run: |
        gh pr create --title "chore(firefox-addons): update some addons" --body "" -l "automated" -l "dependencies" --head firefox-addons --base master
  lockfile:
    runs-on: [ubuntu-latest]
    if: ${{ github.event_name != 'pull_request' && github.ref_name != 'nightly-update' && (github.event.head_commit.author.name == 'fmway' || (github.event_name == 'schedule' && github.event.schedule == '0 0 * * 2,5') || github.event_name == 'workflow_dispatch') }}
    steps:
    - uses: actions/checkout@v4
    - uses: DeterminateSystems/nix-installer-action@main
      with:
        github-token: ${{ secrets.GH_TOKEN }}
        extra-conf: experimental-features = nix-command flakes auto-allocate-uids configurable-impure-env
    - uses: DeterminateSystems/update-flake-lock@v24
      name: Update flake.lock
      with:
        branch: nightly-update
        token: ${{ secrets.GH_TOKEN }}
        git-author-name: 'little fmway'
        git-author-email: 'fm18lv@gmail.com'
        git-committer-name: 'little fmway'
        git-committer-email: 'fm18lv@gmail.com'
        commit-msg: 'chore(lockfile): update flake.lock'
        pr-title: 'chore(lockfile): update flake.lock'
        pr-labels: |
          dependencies
          automated
  auto-merge:
    needs: [xdman, rust-cli]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request'}}
    steps:
      - name: Enable auto-merge
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
