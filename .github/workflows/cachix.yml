name: "cachix"
on:
  pull_request:
  push: 
permissions:
  contents: write
jobs:
  rust-cli:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v25
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v14
      with:
        name: fmcachix
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix build .#cargo-create-tauri-app .#cargo-tauri
    - run: nix-collect-garbage -d
  misc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v25
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v14
      with:
        name: fmcachix
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix build .#filebrowser .#phpmyadmin --verbose 
    - run: nix-collect-garbage -d
  appimage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v25
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v14
      with:
        name: fmcachix
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: |
        nix build .#keypunch .#bootstrap-studio .#popsql --verbose
  xdman:
    if: github.event.commits[0].author.name != 'Bot'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
    - name: Setup git
      run: |
        git config --global user.name 'Bot'
        git config --global user.email 'fm18lv@gmail.com'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
    - uses: cachix/install-nix-action@v25
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          extra-experimental-features = nix-command flakes repl-flake auto-allocate-uids configurable-impure-env
    - uses: cachix/cachix-action@v14
      with:
        name: fmcachix
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Update Nuget deps 
      run: nix build .#xdman.passthru.fetch-deps --verbose # update nuget deps
    - run: |
        ./result ./xdman/xdm-gtk/deps.nix
        unlink result
    - name: Commit
      run: |
        git commit -A && git commit -m "Updated deps xdman" && git push || echo "Nothing..."
    - run: nix build .#xdman --verbose
    - run: nix-collect-garbage -d
